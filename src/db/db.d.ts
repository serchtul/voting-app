/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface Ballot {
  electionId: string;
  id: string;
  salt: string;
  votingHash: string;
}

export interface BallotVote {
  ballotId: string;
  candidateId: string;
  vote: string;
}

export interface Candidate {
  electionId: string;
  id: string;
  name: string;
}

export interface Election {
  date: string;
  id: string;
  name: string;
}

export interface ElectionVoter {
  electionId: string;
  entityId: string;
  votes: Generated<number>;
  votingStatus: Generated<string>;
}

export interface Entity {
  code: string;
  id: string;
  name: string;
  votingEmail: string;
}

export interface User {
  createdAt: string;
  email: string;
  emailVerified: number;
  id: string;
  image: string | null;
  name: string;
  updatedAt: string;
}

export interface DB {
  ballot: Ballot;
  ballotVote: BallotVote;
  candidate: Candidate;
  election: Election;
  electionVoter: ElectionVoter;
  entity: Entity;
  user: User;
}
